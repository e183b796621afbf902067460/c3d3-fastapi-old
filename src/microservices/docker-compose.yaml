---
version: '3'

services:

  gateway-service:
    command: python3 app/views/router/view.py
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - '8000:8000'
    depends_on:
      - auth
    volumes:
      - ./gateway:/app
    env_file:
      - .env
    environment:
      PYTHONPATH: ${PYTHONPATH}:/code/app
    networks:
      - c3d3_network

  auth-service:
    command: python3 app/views/view.py
    build:
      context: ./auth
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_HOST: auth_db
      POSTGRES_USER: auth_db
      POSTGRES_PASSWORD: auth_db
      POSTGRES_DB: auth_db

      PYTHONPATH: ${PYTHONPATH}:/code/app
    networks:
      - c3d3_network

  auth-postgres:
    image: postgres:13
    environment:
      POSTGRES_HOST: auth_db
      POSTGRES_USER: auth_db
      POSTGRES_PASSWORD: auth_db
      POSTGRES_DB: auth_db
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "auth_db" ]
      interval: 5s
      retries: 5
    restart: always
    networks:
      - c3d3_network

  c3-service:
    command: python3 app/views/view.py
    build:
      context: ./c3
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_HOST: c3_db
      POSTGRES_USER: c3_db
      POSTGRES_PASSWORD: c3_db
      POSTGRES_DB: c3_db

      PYTHONPATH: ${PYTHONPATH}:/code/app
    networks:
      - c3d3_network

  c3-postgres:
    image: postgres:13
    environment:
      POSTGRES_HOST: c3_db
      POSTGRES_USER: c3_db
      POSTGRES_PASSWORD: c3_db
      POSTGRES_DB: c3_db
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "c3_db" ]
      interval: 5s
      retries: 5
    restart: always
    networks:
      - c3d3_network

  d3-service:
    command: python3 app/views/view.py
    build:
      context: ./d3
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_HOST: d3_db
      POSTGRES_USER: d3_db
      POSTGRES_PASSWORD: d3_db
      POSTGRES_DB: d3_db

      PYTHONPATH: ${PYTHONPATH}:/code/app
    networks:
      - c3d3_network

  d3-postgres:
    image: postgres:13
    environment:
      POSTGRES_HOST: d3_db
      POSTGRES_USER: d3_db
      POSTGRES_PASSWORD: d3_db
      POSTGRES_DB: d3_db
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "d3_db" ]
      interval: 5s
      retries: 5
    restart: always
    networks:
      - c3d3_network

networks:
  c3d3_network:
